# -*- mode: yaml -*-
# This example configuration for provides basic automations to get started with gitStream.
# View the gitStream quickstart for more examples: https://docs.gitstream.cm/quick-start/
manifest:
  version: 1.0

automations:
  # Automatically approve PRs that change docs and other safe assets
  # https://docs.gitstream.cm/automations/approve-safe-changes/
  safe_changes:
    # Triggered for any changes that only affect formatting, documentation, or images
    if:
      - {{ is.formatting or is.docs or is.image }}
    # Apply a safe change label, approve the PR and explain why in a comment.
    run: 
      - action: add-label@v1
        args:
          label: 'safe-change'
      - action: approve@v1
      - action: add-comment@v1
        args:
          comment: |
            This PR is considered a safe change and has been automatically approved.

  # Flag PRs that are missing a Jira ticket reference in the title or description.
  # https://docs.gitstream.cm/integrations/jira/
  label_missing_jira_info:
    if:
      - {{ not (has.jira_ticket_in_title or has.jira_ticket_in_desc) }}
    run:
      - action: add-label@v1
        args:
          label: "missing-jira"
          color: {{ colors.red }}

  # Flag PRs that have unresolved comment threads.
  # https://docs.gitstream.cm/automations/standard/label-management/label-unresolved-threads/
  label_unresolved_threads:  
    if:
      - {{ pr.status == 'open' }}  
      - {{ pr.unresolved_threads > 0 }}
    run:
      - action: add-label@v1
        args:
          label: "üö® {{ pr.unresolved_threads }} Unresolved Thread(s)"
          color: {{ colors.yellow }}  

  # Flag PRs that delete files to highlight potential refactors that need extra scrutiny.
  # https://docs.gitstream.cm/automations/label-deleted-files/
  flag_deleted_files:
    if:
      - {{ has.deleted_files }}
    run: 
      - action: add-label@v1
        args:
          label: "üóëÔ∏è Deleted files"
          color: {{ colors.orange }}

  # Use AI to generate a concise bullet-point summary of the changes in the pull request, and
  # perform a code review.
  # https://docs.gitstream.cm/automations/integrations/askAI/#ask-ai-to-summarize-the-changes-in-a-pr
  # https://docs.gitstream.cm/automations/integrations/askAI/#ask-ai-for-a-code-review
  ask_ai_describe_and_review:
    if:
      - {{ not (branch.name == "next" or branch.name == "master" or branch.name == "main") }}
      - {{ pr.comments | filter(attr='commenter', term='gitstream-cm') | filter(attr='content', regex=r/PR Summary/) | nope }}
      - {{ pr.comments | filter(attr='commenter', term='gitstream-cm') | filter(attr='content', regex=r/gitStream Review/) | nope }}
    run:
      - action: add-comment@v1
        args:
          comment: |
            {{ source | askAI("
              Use the following template (between the ---) to format your response (do not include the ---). The {prSummary} and {codeReview} placeholders are defined beneath and each should be formatted using Gitlab Flavored Markdown. Do not include any preamble or commentary, stick strictly to the template (including the trailing new line).

              ---
              # üìú PR Summary üìú
              {prSummary}

              # ‚ú® Code Review ‚ú®
              {codeReview}

              ---

              For {prSummary}:
              Summarize the changes in this PR in bullet points. Keep the response concise and to the point, no more than 300 characters.
              
              For {codeReview}:
              Review the PR code diff and follow the instructions below:
              - Identify bugs, security risks, and performance issues
              - Check for deprecated methods and style guide violations
              - Provide specific improvement suggestions based on the changes
              - Respect developers' time and only make comments with a high confidence level, be mindful of the fact you don't have access to the full codebase
              - Be concise and to the point, no more than 300 characters for the entire response
              - Do not make suggestions about code that is not part of the PR diff
              - If there is nothing obvious worth mentioning, please respond with 'LGTM!'
              - Double check your response against these instructions before submitting", env.ANTHROPIC_API_TOKEN) | encode }}

  # Track usage of AI coding assistants like Cursor and Copilot
  # Based on https://docs.gitstream.cm/integrations/linearb/#track-the-impact-of-generative-ai-initiatives
  comment_ai_assistance_prompt:
    # Post a comment for all PRs to prompt the PR author to indicate whether they used AI to assist coding in this MR
    if:
      - {{ pr.comments | filter(attr='commenter', term='gitstream-cm') | filter(attr='content', regex=r/If you used AI to assist with coding for this MR/) | nope }}
    run:
      - action: add-comment@v1
        args:
          comment: |
            If you used AI to assist with coding for this MR, please add an ~"ü§ñ ai-assisted" label to it and a corresponding label(s) for the AI tool(s) that you used:

            - ~"ü§ñ ai-cursor"
            - ~"ü§ñ ai-tabnine"
            - ~"ü§ñ ai-copilot"
            - ~"ü§ñ ai-jetbrains"
            - ~"ü§ñ ai-intellicode"
            - ~"ü§ñ ai-chatgpt"
            - ~"ü§ñ ai-other"

# The next function calculates the estimated time to review and makes it available in the automation above.
calc:
  etr: {{ branch | estimatedReviewTime }}

has:
  jira_ticket_in_title: {{ pr.title | includes(regex=r/\b[A-Za-z]+-\d+\b/) }}
  jira_ticket_in_desc: {{ pr.description | nl2br | dump | safe | includes(regex=r/atlassian.net\/browse\/\w{1,}-\d{3,4}/) }}
  deleted_files: {{ source.diff.files | map(attr='new_file') | match(term='/dev/null') | some }}

# These are all of the colors in GitHub's default label color palette.
colors:
  red: 'b60205'
  orange: 'd93f0b'
  yellow: 'fbca04'
  green: '0e8a16'
  blue: '1d76db'
  purple: '5319e7'

size:
  is:
    small: {{ branch.diff.size < 20 }}
    medium: {{ branch.diff.size >= 20 and branch.diff.size < 100 }}
    large: {{ branch.diff.size >= 100 }}

# These custom expressions are used in the safe_changes automation
is:
  formatting: {{ source.diff.files | isFormattingChange }}
  docs: {{ files | allDocs }}
  tests: {{ files | allTests }}
  image: {{ files | allImages }}